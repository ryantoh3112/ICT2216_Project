services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_app
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    depends_on:
      - database
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      DATABASE_URL: mysql://${MYSQL_USER:-app}:${MYSQL_PASSWORD:-!ChangeMe!}@database:3306/${MYSQL_DATABASE:-app}?serverVersion=8.0.32&charset=utf8mb4

  reverse-proxy:
    image: nginx:latest
    container_name: nginx_reverse_proxy
    ports:
    # HOST_PORT:CONTAINER_PORT
    # HOST_PORT is the port on the host machine, CONTAINER_PORT is the port inside the container
    # reverse proxy container listens on port 80 internally and exposes it on port 80 of your host.

    # Any HTTP request to http://your-server:80 (from a browser or client) goes to your host machine, 
    # which routes it to port 80 inside the reverse-proxy container.
    # Client → Host port 80 → reverse-proxy container port 80 → (via proxy_pass) → nginx container port 80
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/proxy/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./letsencrypt:/etc/letsencrypt              # New: Mount certs
      - ./letsencrypt/www:/var/www/certbot          # New: For certbot challenge
    depends_on:
      - nginx

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./letsencrypt/www:/var/www/certbot
    # keeping the container running idly without doing anything
    # This is necessary to keep the certbot container alive for the reverse proxy to use it.
    entrypoint: /bin/sh -c "trap exit TERM; while :; do sleep 1; done"

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/nginx.Dockerfile
    container_name: symfony_nginx
    environment:
      - SERVER_NAME=${SERVER_NAME}
    expose:
    # port 80 exposed to other containers in the same network, not to the host machine
      - "80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app

  database:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    volumes:
      - database_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    environment:
      PMA_HOST: database
      MYSQL_ROOT_PASSWORD: rootpass
    depends_on:
      - database

###< doctrine/doctrine-bundle ###

volumes:
  database_data:

