services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_app
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    depends_on:
      - database
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      DATABASE_URL: mysql://${MYSQL_USER:-app}:${MYSQL_PASSWORD:-!ChangeMe!}@database:3306/${MYSQL_DATABASE:-app}?serverVersion=8.0&charset=utf8mb4

  reverse-proxy:
    image: nginx:latest
    container_name: nginx_reverse_proxy
    ports:
      - "80:80"
    volumes:
      - ./docker/proxy/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - nginx

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/nginx.Dockerfile
    container_name: symfony_nginx
    environment:
      - SERVER_NAME=${SERVER_NAME}
    # ports:
    #   - "80:80"
    expose:
      - "80"  # expose port 80 internally, not to the host
    volumes:
      - .:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app

  database:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      MYSQL_USER: ${MYSQL_USER:-app}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
    volumes:
      - database_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  database_data:

