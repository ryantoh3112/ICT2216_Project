services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_app
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    depends_on:
      - database
    environment:
      APP_ENV: prod
      APP_DEBUG: 0
      DATABASE_URL: ${DATABASE_URL}
      TRUSTED_PROXIES: ${TRUSTED_PROXIES}
      TRUSTED_HOSTS: ${TRUSTED_HOSTS}

  reverse-proxy:
    image: nginx:latest
    container_name: nginx_reverse_proxy
    ports:
    # HOST_PORT:CONTAINER_PORT
    # HOST_PORT is the port on the host machine, CONTAINER_PORT is the port inside the container
    # reverse proxy exposes ports 80 and 443 to the world
      - "80:80"
      # certbot ACME challenge will route through rev proxy port 80, look for certbot challenge 
      - "443:443" 
      # HTTPS route through 443 via rev proxy then, terminate SSL then get forwarded to nginx port 80
    volumes:
      - ./docker/proxy/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./letsencrypt:/etc/letsencrypt              # New: Mount certs
      - ./letsencrypt/www:/var/www/certbot          # New: For certbot challenge
    depends_on:
      - nginx

  certbot:
    image: certbot/certbot
    volumes:
      - ./letsencrypt:/etc/letsencrypt
      - ./letsencrypt/www:/var/www/certbot
      - ./letsencrypt/log:/var/log/letsencrypt
    # cronjob in instance helps to renew certificates automatically
    entrypoint: ""

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/nginx.Dockerfile
    container_name: symfony_nginx
    environment:
      - SERVER_NAME=${SERVER_NAME}
    expose:
    # port 80 exposed internally only, for reverse proxy to connect
      - "80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - app

  database:
    image: mysql:8.0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - database_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    # ports:
    #   - "8081:80"
    # testing ssh local port forward for this page
    ports:
      - "127.0.1:8081:80"  # Bind to localhost only for security
    environment:
      PMA_HOST: database
      MYSQL_ROOT_PASSWORD: rootpass
    depends_on:
      - database

###< doctrine/doctrine-bundle ###


volumes:
  database_data:

